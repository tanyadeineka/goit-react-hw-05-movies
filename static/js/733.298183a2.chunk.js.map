{"version":3,"file":"static/js/733.298183a2.chunk.js","mappings":"uRAEMA,EAAU,mCAEHC,EAAW,mCAAG,sGACAC,EAAAA,EAAAA,IAAA,mEACyCF,EADzC,YADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,EAAKC,QAAQC,KAAI,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,OAAQH,EAAKI,YAEpB,KAVsB,2CAAH,qDAaXC,EAAU,mCAAG,WAAMJ,GAAN,yFACCL,EAAAA,EAAAA,IAAA,6CACmBK,EADnB,oBACiCP,EADjC,oBADD,uBACdG,EADc,EACdA,KADc,kBAIf,CACHS,MAAOT,EAAKO,YACZF,MAAOL,EAAKK,MACZK,KAAMV,EAAKW,aACXC,MAAOZ,EAAKa,aACZC,SAAUd,EAAKc,SACfC,OAAQf,EAAKe,SAVK,2CAAH,sDAcVC,EAAa,mCAAG,WAAMC,GAAN,yFACFlB,EAAAA,EAAAA,IAAA,0DACgCkB,EADhC,oBACiDpB,EADjD,+CADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,QAAQC,KAAI,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,OAAQH,EAAKI,YAEpB,KAVwB,2CAAH,sDA0BbW,EAAU,mCAAG,WAAMd,GAAN,yFACDL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BACuCP,EADvC,2BADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,EAAKC,QAAQC,KAAI,SAAAiB,GACtB,MAAO,CACLC,OAAQD,EAAOC,OACfC,QAASF,EAAOE,QAChBC,SAAUH,EAAOf,GAEpB,KAVuB,2CAAH,qD,4CC1CvB,IAbe,WACb,OACE,SAAC,KAAD,CACEmB,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,C,+ICbD,GAAiB,E,SCMF,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEQjC,GAAOkC,EAAAA,EAAAA,MAAPlC,GAgBR,OAdAmC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIN,GAAa,GAFjB,UAG0Bf,EAAAA,EAAAA,IAAWd,GAHrC,OAGUgC,EAHV,OAIIC,EAAWD,GAJf,gDAMID,EAAS,6CANb,yBAQIF,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdO,EACD,GAAE,CAACpC,KAEF,gCACG4B,IAAa,SAACS,EAAA,EAAD,IACbP,IAAS,uBAAIA,IACM,IAAnBE,EAAQM,QACP,cAAGC,UAAWC,EAAAA,aAAd,yDAIA,eAAID,UAAWC,EAAAA,KAAf,SACGR,EAAQlC,KAAI,SAAAiB,GACX,OACE,gBAAIwB,UAAWC,EAAAA,KAAf,WACE,wBAAKzB,EAAOC,UACZ,uBAAID,EAAOE,YAFiBF,EAAOG,SAKxC,QAKV,C","sources":["API.jsx","components/Loader.jsx","components/Reviews.module.css","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'acd3e1918f36805b2e8d8b868384b633';\n \nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getDetails = async id => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return {\n        image: data.poster_path,\n        title: data.title,\n        date: data.release_date,\n        score: data.vote_average,\n        overview: data.overview,\n        genres: data.genres,\n    };\n};\n\nexport const getByKeywords = async query => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getCasts = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(elem => {\n    return {\n      avatar: elem.profile_path,\n      name: elem.name,\n      character: elem.character,\n    };\n  });\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(review => {\n    return {\n      author: review.author,\n      content: review.content,\n      reviewId: review.id,\n    };\n  });\n};","import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { getReviews } from 'API';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function onGetReviews() {\n      try {\n        setIsLoading(true);\n        const reviews = await getReviews(id);\n        setReviews(reviews);\n      } catch {\n        setError(\"We don't have any review about this movie\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    onGetReviews();\n  }, [id]);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {reviews.length === 0 ? (\n        <p className={css.notification}>\n          We don't have any reviews about this movie\n        </p>\n      ) : (\n        <ul className={css.list}>\n          {reviews.map(review => {\n            return (\n              <li className={css.item} key={review.reviewId}>\n                <h1>{review.author}</h1>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","getTrending","axios","data","results","map","film","id","title","poster","poster_path","getDetails","image","date","release_date","score","vote_average","overview","genres","getByKeywords","query","getReviews","review","author","content","reviewId","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","Reviews","useState","isLoading","setIsLoading","error","setError","reviews","setReviews","useParams","useEffect","onGetReviews","Loader","length","className","css"],"sourceRoot":""}