{"version":3,"file":"static/js/269.f356f122.chunk.js","mappings":"oOAEMA,EAAU,mCAEHC,EAAW,mCAAG,sGACAC,EAAAA,EAAAA,IAAA,mEACyCF,EADzC,YADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,EAAKC,QAAQC,KAAI,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,OAAQH,EAAKI,YAEpB,KAVsB,2CAAH,qD,4CCWxB,EAbe,WACb,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,ECbD,GAAiB,ECKF,SAASC,IACpB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAEQP,GAAa,GAFrB,SAG4BpB,IAH5B,OAGcqB,EAHd,OAIQC,EAASD,GAJjB,gDAMQG,EAAS,+BANjB,yBAQQJ,GAAa,GARrB,6EADY,uBAAC,WAAD,wBAYZQ,EACH,GAAE,KAED,iBAAKC,UAAWC,EAAAA,YAAhB,WACE,eAAID,UAAWC,EAAAA,UAAf,4BACCP,IAAS,uBAAIA,IACbJ,IAAa,SAAC,EAAD,KACd,eAAIU,UAAWC,EAAAA,KAAf,SACGT,EAAMjB,KAAI,SAAAC,GAAI,OACb,gBAAkBwB,UAAWC,EAAAA,KAA7B,WACE,gBAAKC,IAAG,0CAAqC1B,EAAKG,QAAUwB,IAAK3B,EAAKE,MAAOI,MAAO,OAChF,SAAC,KAAD,CAAMkB,UAAWC,EAAAA,KAAUG,GAAE,iBAAY5B,EAAKC,IAAM4B,MAAO,CAACC,KAAMV,GAAlE,SAA8EpB,EAAKE,UAFhFF,EAAKC,GADD,QASxB,C","sources":["API.jsx","components/Loader.jsx","pages/Home.module.css","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'acd3e1918f36805b2e8d8b868384b633';\n \nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getDetails = async id => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return {\n        image: data.poster_path,\n        title: data.title,\n        date: data.release_date,\n        score: data.vote_average,\n        overview: data.overview,\n        genres: data.genres,\n    };\n};\n\nexport const getByKeywords = async query => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getCasts = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(elem => {\n    return {\n      avatar: elem.profile_path,\n      name: elem.name,\n      character: elem.character,\n    };\n  });\n};\n\nexport const getReviewes = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(review => {\n    return {\n      author: review.author,\n      content: review.content,\n      reviewId: review.id,\n    };\n  });\n};","import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { getTrending } from \"API\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport css from \"./Home.module.css\";\n\nexport default function Home() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [films, setFilms] = useState([]);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        async function getTrendingFilms() {\n            try {\n                setIsLoading(true);\n                const films = await getTrending();\n                setFilms(films);\n            } catch {\n                setError('Sorry, we can not get data.');\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        getTrendingFilms();\n    }, []);\n    return (\n      <div className={css.homeWrapper}>\n        <h1 className={css.homeTitle}>Trending today</h1>\n        {error && <p>{error}</p>}\n        {isLoading && <Loader />}\n        <ul className={css.list}>\n          {films.map(film => (\n            <li key={film.id} className={css.item}>\n              <img src={`https://image.tmdb.org/t/p/w300/${film.poster}`} alt={film.title} width={300}></img>\n                  <Link className={css.link} to={`movies/${film.id}`} state={{from: location}}>{film.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n}"],"names":["API_KEY","getTrending","axios","data","results","map","film","id","title","poster","poster_path","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","Home","useState","isLoading","setIsLoading","films","setFilms","error","setError","location","useLocation","useEffect","getTrendingFilms","className","css","src","alt","to","state","from"],"sourceRoot":""}