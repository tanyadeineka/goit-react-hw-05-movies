{"version":3,"file":"static/js/547.e6606d49.chunk.js","mappings":"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","sources":["API.jsx","webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/Cast.jsx","components/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'acd3e1918f36805b2e8d8b868384b633';\n \nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getDetails = async id => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return {\n        image: data.poster_path,\n        title: data.title,\n        date: data.release_date,\n        score: data.vote_average,\n        overview: data.overview,\n        genres: data.genres,\n    };\n};\n\nexport const getByKeywords = async query => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getCasts = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(elem => {\n    return {\n      avatar: elem.profile_path,\n      name: elem.name,\n      character: elem.character,\n    };\n  });\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(review => {\n    return {\n      author: review.author,\n      content: review.content,\n      reviewId: review.id,\n    };\n  });\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__clFFB\",\"item\":\"Cast_item__o4G7Z\",\"img\":\"Cast_img__CNfev\",\"name\":\"Cast_name__MMJeA\",\"character\":\"Cast_character__r3Kl0\"};","import { getCasts } from 'API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader';\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [actors, setActors] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function onGetCast() {\n      try {\n        setIsLoading(true);\n        const actors = await getCasts(id);\n        setActors(actors);\n      } catch {\n        setError(\"We don't have any cast about this movie\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    onGetCast();\n  }, [id]);\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {isLoading && <Loader />}\n      <ul className={css.list}>\n        {actors.map(actor => {\n          return (\n            <li className={css.item} key={actor.name}>\n              {actor.avatar ? (\n                <img\n                  className={css.img}\n                  src={`https://image.tmdb.org/t/p/w200/${actor.avatar}`}\n                  alt={actor.name}\n                  width={200}\n                ></img>\n              ) : (\n                <img\n                  src=\"https://img.freepik.com/premium-vector/photo-frame-icon-empty-photo-blank-vector-on-isolated-transparent-background-eps-10_399089-1290.jpg\"\n                  alt={actor.name}\n                  width={200}\n                ></img>\n              )}\n              <div>\n                <p className={css.name}>{actor.name}</p>\n                <p className={css.character}>Character: {actor.character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\nexport default Loader;\n"],"names":["API_KEY","getTrending","axios","data","results","map","film","id","title","poster","poster_path","getDetails","image","date","release_date","score","vote_average","overview","genres","getByKeywords","query","getCasts","cast","elem","avatar","profile_path","name","character","getReviews","review","author","content","reviewId","Cast","useState","isLoading","setIsLoading","error","setError","actors","setActors","useParams","useEffect","onGetCast","Loader","className","css","actor","src","alt","width","height","radius","color","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}