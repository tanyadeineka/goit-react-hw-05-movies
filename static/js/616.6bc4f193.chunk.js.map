{"version":3,"file":"static/js/616.6bc4f193.chunk.js","mappings":"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","sources":["API.jsx","components/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'acd3e1918f36805b2e8d8b868384b633';\n \nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getDetails = async id => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return {\n        image: data.poster_path,\n        title: data.title,\n        date: data.release_date,\n        score: data.vote_average,\n        overview: data.overview,\n        genres: data.genres,\n    };\n};\n\nexport const getByKeywords = async query => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n    );\n    return data.results.map(film => {\n        return {\n            id: film.id,\n            title: film.title,\n            poster: film.poster_path,\n        };\n    });\n};\n\nexport const getCasts = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast.map(elem => {\n    return {\n      avatar: elem.profile_path,\n      name: elem.name,\n      character: elem.character,\n    };\n  });\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results.map(review => {\n    return {\n      author: review.author,\n      content: review.content,\n      reviewId: review.id,\n    };\n  });\n};","import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionWrapper\":\"MovieDetails_descriptionWrapper__5fktp\",\"goBack\":\"MovieDetails_goBack__A3SmA\",\"description\":\"MovieDetails_description__RMUTf\",\"score\":\"MovieDetails_score__nyd0Y\",\"overview\":\"MovieDetails_overview__D3vhU\",\"additional\":\"MovieDetails_additional__3Hczv\",\"list\":\"MovieDetails_list__ecyjU\",\"item\":\"MovieDetails_item__x0IBk\"};","import { useEffect, useState, Suspense, useMemo } from 'react';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { getDetails } from 'API';\nimport css from './MovieDetails.module.css';\nimport Loader from '../components/Loader';\n\nexport default function MovieDetails() {\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [score, setScore] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getFilmDetails() {\n      try {\n        setIsLoading(true);\n        const { image, title, date, score, overview, genres } =\n          await getDetails(id);\n        setImage(image);\n        setTitle(title);\n        setDate(date.substr(0, 4));\n        setScore(String(Math.ceil(Number(score) * 10)));\n        setOverview(overview);\n        setGenres(genres);\n      } catch {\n        setError('Sorry, we can not get data.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getFilmDetails();\n  }, [id]);\n\n  const genresList = useMemo(() => {\n    const genreArray = [];\n    genres.map(genre => genreArray.push(genre.name));\n    return genreArray.join(', ');\n  }, [genres]);\n\n  return (\n    <>\n      <Link className={css.goBack} to={backLinkHref}>\n        Go back\n      </Link>\n      <div className={css.descriptionWrapper}>\n        {error && <p>{error}</p>}\n        {isLoading && <Loader />}\n        <img\n          className={css.img}\n          src={`https://image.tmdb.org/t/p/w300/${image}`}\n          alt={title}\n          width={300}\n        ></img>\n        <div className={css.description}>\n          <h1>{`${title} (${date})`}</h1>\n          <p className={css.score}>User Score: {score}%</p>\n          <h2>Overview</h2>\n          <p className={css.overview}>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresList}</p>\n          <p className={css.additional}>Additional information</p>\n          <ul className={css.list}>\n            <li className={css.item}>\n              <Link className={css.link} to=\"cast\">\n                Cast\n              </Link>\n            </li>\n            <li className={css.item}>\n              <Link className={css.link} to=\"reviews\">\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["API_KEY","getTrending","axios","data","results","map","film","id","title","poster","poster_path","getDetails","image","date","release_date","score","vote_average","overview","genres","getByKeywords","query","getCasts","cast","elem","avatar","profile_path","name","character","getReviews","review","author","content","reviewId","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","MovieDetails","useState","setImage","setTitle","setDate","setScore","setOverview","setGenres","error","setError","isLoading","setIsLoading","useParams","backLinkHref","useLocation","state","from","useEffect","substr","String","Math","ceil","Number","getFilmDetails","genresList","useMemo","genreArray","genre","push","join","className","css","to","Loader","src","alt","Suspense","fallback"],"sourceRoot":""}